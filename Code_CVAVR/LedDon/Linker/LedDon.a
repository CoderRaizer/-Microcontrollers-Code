;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : LedDon
;Version : 0.1
;Date    : 21-Oct-2018
;Author  : DuyKhanh
;Company : GTS
;Comments:
;No
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#define LED PORTA
;#define Off 0x00
;#define On 0xff;
;
;// Declare your global variables here
;char led[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};

	.DSEG
;
;
;
;void MotLedSangDuoiQuaLai()//cong tat 1
; 0000 0025 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0026     int i = 0;
; 0000 0027     while(PINB == 0x01)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	i -> R16,R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0028     {
; 0000 0029         if(i > 7){
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 002A         i = 0;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002B         }
; 0000 002C         LED = led[i];
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002D         delay_ms(20);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002E         i++;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002F     }
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0030 
; 0000 0031 }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;
;void TamLedSangDanTatDan()//cong tat 2
; 0000 0034 {
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0035     unsigned char i;
; 0000 0036     while(PINB==0x02){
;PCODE: $0000002D VOL: 0
;	i -> R17
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0037         //SANG DAN
; 0000 0038         LED = Off;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0039         for(i=0;i<8;i++)
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 003A         {
; 0000 003B             LED = (LED<<1)| 0x01;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003C             delay_ms(20);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 003D         }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 003E         //TAT DAN
; 0000 003F         for(i=0;i<8;i++)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0040         {
; 0000 0041             LED = LED<<1;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0042             delay_ms(20);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0043         }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0044     }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0045 }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;
;void SangTu2BenVao_TatTu2BenVao()//cong tat 3
; 0000 0048 {
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0049     int i;
; 0000 004A     unsigned char x = 0b00000001;
; 0000 004B     unsigned char y = 0b10000000;
; 0000 004C     for(i = 0; i < 4; i++)
;PCODE: $00000064 VOL: 0
;	i -> R16,R17
;	x -> R19
;	y -> R18
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 004D     {
; 0000 004E         LED += (x+y);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 004F         delay_ms(20);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0050         x = (x<<1);
;PCODE: $0000007B VOL: 0
; 0000 0051         y = (y>>1);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0052     }
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0053     x = 0b00000001;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0054     y = 0b10000000;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0055     for(i = 0; i < 4; i++)
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0056     {
; 0000 0057         LED -= (x+y);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0058         delay_ms(20);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0059         x = (x<<1);
;PCODE: $0000009E VOL: 0
; 0000 005A         y = (y>>1);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 005B     }
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 005C }
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;
;void MotLedChayTuTraiQuaPhaiDungLaiOBenPhaiChoDenKhi8LedCungSang()//cong tat 4
; 0000 005F {
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0060     unsigned char x = 0b00000000;
; 0000 0061     unsigned char y = 0b00000000;
; 0000 0062     int i,j;
; 0000 0063     for(i = 0; i < 8; i++)
;PCODE: $000000AE VOL: 0
;	x -> R17
;	y -> R16
;	i -> R18,R19
;	j -> R20,R21
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0064     {
; 0000 0065         x = 0b00000000;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0066          for(j = i; j < 8; j++)
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0067          {
; 0000 0068             LED = x + y;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0069             delay_ms(20);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 006A             x = (x<<1);
;PCODE: $000000CD VOL: 0
; 0000 006B             if(j == i)
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 006C             {
; 0000 006D                 x+=1;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 006E             }
; 0000 006F          }
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0070          y += x;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0071          if(i == 7)
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0072          {
; 0000 0073             LED = y;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0074             delay_ms(20);
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0075          }
; 0000 0076     }
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0077 }
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;
;void TamLedChopTat()//cong tat 5
; 0000 007A {
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 007B     unsigned char x = Off;
; 0000 007C     unsigned char y = On;
; 0000 007D     LED = x;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;	x -> R17
;	y -> R16
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 007E     delay_ms(20);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 007F     LED = y;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0080     delay_ms(20);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0081 }
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;
;void TamLedSangTatXenKe()//cong tat 6
; 0000 0084 {
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 0085     unsigned char a = 0b10101010;
; 0000 0086     unsigned char b = 0b01010101;
; 0000 0087     LED = a;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;	a -> R17
;	b -> R16
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0088     delay_ms(20);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 0089     LED = b;
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 008A     delay_ms(20);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 008B }
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;
;void BonLedSangBonLedTat()//cong tat 7
; 0000 008E {
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 008F    unsigned char a = 0b00001111;
; 0000 0090    unsigned char b = 0b11110000;
; 0000 0091    LED = a;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;	a -> R17
;	b -> R16
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 0092    delay_ms(20);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 0093    LED = b;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0094    delay_ms(20);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 0095 }
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;
;void HaiLedSangChayTuHaiBenVaoVaChayRaHaiBen()//cong tat 8
; 0000 0098 {
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0099     int i,j;
; 0000 009A     unsigned char a = 0b00000001;
; 0000 009B     unsigned char b = 0b10000000;
; 0000 009C     for(i = 0; i < 4; i++)
;PCODE: $0000012E VOL: 0
;	i -> R16,R17
;	j -> R18,R19
;	a -> R21
;	b -> R20
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 009D     {
; 0000 009E         LED = a+b;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 009F         delay_ms(20);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00A0         a = (a<<1);
;PCODE: $00000142 VOL: 0
; 0000 00A1         b = (b>>1);
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00A2     }
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00A3     a = 0b00010000;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00A4     b = 0b00001000;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00A5     for(i = 0; i < 4; i++)
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00A6     {
; 0000 00A7         LED = a+b;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00A8         delay_ms(20);
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00A9         a = (a<<1);
;PCODE: $0000015F VOL: 0
; 0000 00AA         b = (b>>1);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00AB     }
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00AC }
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;
;
;
;
;
;
;
;void main(void)
; 0000 00B5 {
;PCODE: $0000016D VOL: 0
; 0000 00B6 // Declare your local variables here
; 0000 00B7 
; 0000 00B8 
; 0000 00B9 
; 0000 00BA /*-------------*/
; 0000 00BB PORTA=0x00;
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00BC DDRA=0xFF;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00BD /*-------------*/
; 0000 00BE PORTB=0x00;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00BF DDRB=0x00;
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00C0 /*-------------*/
; 0000 00C1 PORTC=0x00;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00C2 DDRC=0x00;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00C3 /*-------------*/
; 0000 00C4 PORTD=0x00;
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00C5 DDRD=0x00;
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00C6 /*-------------*/
; 0000 00C7 TCCR0=0x00;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 00C8 TCNT0=0x00;
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00C9 OCR0=0x00;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00CA 
; 0000 00CB /*----------------------------*/
; 0000 00CC TCCR1A=0x00;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 00CD TCCR1B=0x00;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00CE TCNT1H=0x00;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00CF TCNT1L=0x00;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00D0 ICR1H=0x00;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00D1 ICR1L=0x00;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00D2 OCR1AH=0x00;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00D3 OCR1AL=0x00;
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00D4 OCR1BH=0x00;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 00D5 OCR1BL=0x00;
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00D6 /*----------------------------*/
; 0000 00D7 ASSR=0x00;
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00D8 TCCR2=0x00;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00D9 TCNT2=0x00;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00DA OCR2=0x00;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00DB /*----------------------------*/
; 0000 00DC MCUCR=0x00;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00DD MCUCSR=0x00;
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00DE /*----------------------------*/
; 0000 00DF TIMSK=0x00;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00E0 /*----------------------------*/
; 0000 00E1 UCSRB=0x00;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00E2 /*----------------------------*/
; 0000 00E3 ACSR=0x80;
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00E4 SFIOR=0x00;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00E5 /*----------------------------*/
; 0000 00E6 ADCSRA=0x00;
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00E7 /*----------------------------*/
; 0000 00E8 SPCR=0x00;
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00E9 /*----------------------------*/
; 0000 00EA TWCR=0x00;
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00EB 
; 0000 00EC while (1)
;PCODE: $000001B2 VOL: 0
; 0000 00ED       {
; 0000 00EE         switch(PINB)
;PCODE: $000001B3 VOL: 0
; 0000 00EF         {
; 0000 00F0             case 0x01:{//Cong tat 1
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00F1 
; 0000 00F2             while(PINB == 0x01)
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00F3             {
; 0000 00F4                 MotLedSangDuoiQuaLai();
;PCODE: $000001BA VOL: 0
; 0000 00F5             }
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00F6             PORTA = Off;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00F7             delay_ms(10);
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00F8             break;
;PCODE: $000001C2 VOL: 0
; 0000 00F9             }
; 0000 00FA             case 0x02:{//Cong tat 2
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00FB             while(PINB == 0x02){
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 00FC                  TamLedSangDanTatDan();
;PCODE: $000001CA VOL: 0
; 0000 00FD             }
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 00FE                 LED = Off;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00FF                 delay_ms(10);
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 0100                 break;
;PCODE: $000001D2 VOL: 0
; 0000 0101             }
; 0000 0102 
; 0000 0103             case 0x04:{//Cong tat 3
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 0104                 while(PINB == 0x04)
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 0105                 {
; 0000 0106                    SangTu2BenVao_TatTu2BenVao();
;PCODE: $000001DA VOL: 0
; 0000 0107                 }
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 0108                 LED = Off;
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 0109                 delay_ms(10);
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 010A                 break;
;PCODE: $000001E2 VOL: 0
; 0000 010B             }
; 0000 010C 
; 0000 010D             case 0x08:{//Cong tat 4
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 010E                 while(PINB == 0x08)
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 010F                 {
; 0000 0110                    MotLedChayTuTraiQuaPhaiDungLaiOBenPhaiChoDenKhi8LedCungSang();
;PCODE: $000001EA VOL: 0
; 0000 0111                 }
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 0112                 LED = Off;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 0113                 delay_ms(10);
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 0114                 break;
;PCODE: $000001F2 VOL: 0
; 0000 0115             }
; 0000 0116 
; 0000 0117             case 0x10:{//Cong tat 5
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 0118                 while(PINB == 0x10)
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 0119                 {
; 0000 011A                     TamLedChopTat();
;PCODE: $000001FA VOL: 0
; 0000 011B                 }
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 011C                 LED = Off;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 011D                 delay_ms(10);
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 011E                 break;
;PCODE: $00000202 VOL: 0
; 0000 011F             }
; 0000 0120 
; 0000 0121             case 0x20:{//Cong tat 6
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 0122                 while(PINB == 0x20)
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0123                 {
; 0000 0124                     TamLedSangTatXenKe();
;PCODE: $0000020A VOL: 0
; 0000 0125                 }
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 0126                 LED = Off;
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 0127                 delay_ms(10);
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 0128                 break;
;PCODE: $00000212 VOL: 0
; 0000 0129             }
; 0000 012A 
; 0000 012B             case 0x40:{//Cong tat 7
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 012C                 while(PINB == 0x40)
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 012D                 {
; 0000 012E                    BonLedSangBonLedTat();
;PCODE: $0000021A VOL: 0
; 0000 012F                 }
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 0130                 LED = Off;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0131                 delay_ms(10);
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 0132                 break;
;PCODE: $00000222 VOL: 0
; 0000 0133             }
; 0000 0134 
; 0000 0135             case 0x80:{//Cong tat 8
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 0136                 while(PINB == 0x80)
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 0137                 {
; 0000 0138                    HaiLedSangChayTuHaiBenVaoVaChayRaHaiBen();
;PCODE: $0000022A VOL: 0
; 0000 0139                 }
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 013A                 LED = Off;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 013B                 delay_ms(10);
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 013C                 break;
;PCODE: $00000232 VOL: 0
; 0000 013D             }
; 0000 013E 
; 0000 013F         }
;PCODE: $00000233 VOL: 0
; 0000 0140 
; 0000 0141       }
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 0142 }
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;
;
;
;
;
;
;//*----------------------------------------------*//
;//                    int a = 1;
;//                    int i;
;//                    for(i = 0; i < 7; i++) {
;//                        a = a<<1;
;//                        PORTA = a;
;//                        delay_ms(50);
;//                    }
;//                     for(i = 0; i < 7; i++) {
;//                         a = a>>1;
;//                         PORTA = a;
;//                         delay_ms(50);
;//                     }
;//                     PORTA = 0x00;
;//                     break;
;//*----------------------------------------------*//
;
;
;
;
;
;//*------------------case 0x02----------------------------*//
;//                count = 0;
;//                dir = 0;// left to right
;//                while(PINB == 0x02)
;//                {
;//                    LED = led[count];
;//                    delay_ms(15);
;//                   if(dir == 0){
;//                        count++;
;//                        if(count >= 7)
;//                        {
;//                            dir = 1;//right to left
;//                        }
;//                   } else {
;//                        count--;
;//                        if(count <= 0)
;//                        {
;//                             dir = 0;
;//                        }
;//                   }
;//                }
;//                LED = 0x00;
;//                delay_ms(10);
;//*----------------------------------------------*//
;
;
;
;
;/*-----------Sang dan tu trai qua phai xong tat dan tu phai qua trai----------*/
;//                dir = 0; //left to right
;//                val = 0;
;//                LED = Off;
;//                while(PINB == 0x04)
;//                {
;//                    PORTA = val;
;//                    delay_ms(20);
;//                    if(dir == 0)
;//                    {
;//                        val = val << 1;
;//                        val = val + 1;
;//                        if(val > 255)
;//                        {
;//                            dir = 1;
;//                        }
;//                        if(PINB != 0x04)
;//                        {
;//                            PORTA = 0x00;
;//                            delay_ms(10);
;//                            break;
;//                        }
;//                    }
;//                    else
;//                    {
;//                        val = val >> 1;
;//                        if(val <= 0)
;//                        {
;//                            dir = 0;
;//                        }
;//                        if(PINB != 0x04)
;//                        {
;//                            PORTA = 0x00;
;//                            delay_ms(10);
;//                            break;
;//                        }
;//                    }
;//             }
;/*-----------Sang dan tu trai qua phai xong tat dan tu phai qua trai----------*/
;
;
;
;
;
;/*---------------------------------------------------------*/
;//                //0000 0000 0
;//                //1000 0001 129
;//                //0100 0010 195
;//                //0010 0100
;//                //0001 1000
;//                dir = 0;
;//                val_1 = 0x80;
;//                val_2 = 0x01;
;//                while(1)
;//                {
;//                    PORTA = val_1 + val_2;
;//                    delay_ms(50);
;//                    if(dir == 0)
;//                    {
;//                        val_1 = val_1 >> 1;
;//                        val_2 = val_2 << 1;
;//                        if(val_2 > 8)
;//                        {
;//                            val_1 = 0x10; //0001 0000
;//                            val_2 = 0x08; //0000 1000
;//                            dir = 1;
;//                        }
;//                    }
;//                    else
;//                    {   if(val_2 == 0x00 )
;//                        {
;//                            val_1 = 0x80;
;//                            val_2 = 0x01;
;//                            dir = 0;
;//                        }
;//                        else
;//                        {
;//                            val_1 = val_1 << 1;
;//                            val_2 = val_2 >> 1;
;//                        }
;//                    }
;/*---------------------------------------------------------*/
;
;
;
;
;/*-----Sang tu 2 ben vao va tat tu 2 ben vao (chua duoc)------*/
;//   unsigned char i;
;//   unsigned char a = 0x01;
;//   unsigned char b = 0x80;
;//   int x = 0;
;//   x = 0; a = 0x01;b = 0x80;
;//   while(PINB==0x04){
;//   LED = Off;
;//      if(x > 3)
;//      {
;//        unsigned char x;
;//        unsigned char y;
;//        for(i=0;i<3;i++)
;//        {
;//            x = a<<1;
;//            y = b>>1;
;//            LED = x+y;
;//            delay_ms(20);
;//
;//        }
;//
;//        delay_ms(20);
;//        LED = Off;
;//          x = 0; a = 0x01;b = 0x80;
;//      }
;//
;//      else {
;//         LED = a+b;
;//         delay_ms(30);
;//         a = (a<<1)| 0x01;
;//         b = (b>>1)| 0x80;
;//         x++;
;//         }
;//
;//   }
;/*------------------------------------------------*/
